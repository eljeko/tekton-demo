Your {{ include "bookstore-chart.name" . }} is installed/updated

1. You may test the services with the following URLs after you build from source

  Books ReST service (Java)    

    To test it you can get the public url:
  
      oc get route bookstore-books-api -o jsonpath='{.status.ingress[0].host}' --namespace {{ .Release.Namespace }}

    And then add the service method path to test it, you may run this command to generate the url:

      echo "http://"$(oc get route bookstore-books-api -o jsonpath='{.status.ingress[0].host}' --namespace {{ .Release.Namespace }})"/books"

  Stock ReST service (dotnet)
  
    To test it you can get the public url:

      oc get route bookstore-stock-api  -o jsonpath='{.status.ingress[0].host}' --namespace {{ .Release.Namespace }}

    And then add the service method path to test it, you may run this command to generate the url:

      echo "http://"$(oc get route bookstore-stock-api  -o jsonpath='{.status.ingress[0].host}' --namespace {{ .Release.Namespace }})"/booksavailability/1"      

2. Post install Front End setup for demo
  
  After all the items are installed you need to update the front-end containers env variables with the URLs of the ReST services:

  oc patch  deployment/{{ include "bookstore-chart.fullname" . }}-fe -p "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"env\":[{\"name\":\"BOOKSAPIURL\",\"value\":\"http://$(oc get route bookstore-books-api -o jsonpath='{.status.ingress[0].host}' --namespace {{ .Release.Namespace }})\"},{\"name\":\"BOOKSTOCKAPIURL\",\"value\":\"http://$(oc get route bookstore-stock-api  -o jsonpath='{.status.ingress[0].host}' --namespace {{ .Release.Namespace }})\"}],\"name\":\"bookstore-chart-fe\"}]}}}}" --namespace {{ .Release.Namespace }}

